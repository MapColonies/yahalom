root = true
charset = utf-8

[*.cs]
indent_style = space
indent_size = 4
tab_width = 4

csharp_new_line_before_open_brace = all
csharp_preserve_single_line_blocks = false
csharp_preserve_single_line_statements = false

csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_around_binary_operators = before_and_after

csharp_using_directive_placement = outside_namespace
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = true

dotnet_style_require_var_for_built_in_types = true:warning
dotnet_style_require_var_for_simple_types = true:warning
dotnet_style_require_var_when_type_is_apparent = true:warning

dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

csharp_style_expression_bodied_properties = when_possible:suggestion
csharp_style_expression_bodied_methods = never:suggestion
csharp_style_expression_bodied_constructors = never:suggestion

dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion

dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_naming_style.camel_case.capitalization = camel_case
dotnet_naming_style.underscore_prefix.capitalization = camel_case
dotnet_naming_style.underscore_prefix.required_prefix = _
dotnet_naming_style.pascal_with_I.capitalization = pascal_case
dotnet_naming_style.pascal_with_I.required_prefix = I

dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_symbols.interfaces.applicable_accessibilities = *
dotnet_naming_symbols.public_members.applicable_kinds = method, property, field, event
dotnet_naming_symbols.public_members.applicable_accessibilities = public, protected, protected_internal
dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private, internal, protected_internal
dotnet_naming_symbols.constants.applicable_kinds = field
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_rule.interfaces_must_be_IPascal.symbols = interfaces
dotnet_naming_rule.interfaces_must_be_IPascal.style = pascal_with_I
dotnet_naming_rule.interfaces_must_be_IPascal.severity = warning

dotnet_naming_rule.public_members_pascal.symbols = public_members
dotnet_naming_rule.public_members_pascal.style = pascal_case
dotnet_naming_rule.public_members_pascal.severity = warning

dotnet_naming_rule.private_fields_underscore.symbols = private_fields
dotnet_naming_rule.private_fields_underscore.style = underscore_prefix
dotnet_naming_rule.private_fields_underscore.severity = warning

dotnet_naming_rule.constants_pascal.symbols = constants
dotnet_naming_rule.constants_pascal.style = pascal_case
dotnet_naming_rule.constants_pascal.severity = warning
