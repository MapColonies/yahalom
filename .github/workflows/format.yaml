name: Format

on:
  workflow_call:

jobs:
  format_check:
    name: Verify Rider formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install JetBrains ReSharper Global Tools (jb)
        run: |
          set -euo pipefail
          dotnet tool install --global JetBrains.ReSharper.GlobalTools
          echo "$HOME/.dotnet/tools" >> "$GITHUB_PATH"
          "$HOME/.dotnet/tools/jb" --version

      - name: Restore solution
        run: dotnet restore "./yahalom.sln"

      - name: Format selected projects with ReSharper
        run: |
          set -euo pipefail
          JB="$HOME/.dotnet/tools/jb"
          cd "$GITHUB_WORKSPACE"

          projects=(
            "yahalom.csproj"
            "PlayModeTests.csproj"
            "EditorTests.csproj"
            "com.mapcolonies.core.csproj"
          )

          for proj in "${projects[@]}"; do
            abs="$(realpath "$proj")"
            echo "Formatting project: $abs"
            "$JB" cleanupcode "$abs" \
              --profile="Built-in: Reformat Code" \
              --no-build \
              --verbosity=WARN \
              --include="**/*.cs" \
              --exclude="**/bin/**" \
              --exclude="**/obj/**" \
              --exclude="**/.idea/**"
          done

      - name: Detect formatting changes (code files only)
        id: diff
        run: |
          set -euo pipefail
          DIFF_FILE="$(pwd)/__format_diff__.txt"
          echo "diff_file=$DIFF_FILE" >> "$GITHUB_OUTPUT"

          # -U0 -> hunk headers only; restrict to likely code files
          git --no-pager diff --unified=0 -- '*.cs' '*.csproj' '*.sln' > "$DIFF_FILE" || true

          if [ -s "$DIFF_FILE" ]; then
            echo "has_changes=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_changes=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Annotate changed lines + write summary
        if: steps.diff.outputs.has_changes == 'true'
        run: |
          DIFF_FILE="${{ steps.diff.outputs.diff_file }}"

          # 1) Inline annotations (file + line range)
          awk '
            BEGIN{f=""}
            /^\+\+\+ b\//{sub(/^\+\+\+ b\//,""); f=$0; next}
            /^@@ /{
              # Parse +c,d from "@@ -a,b +c,d @@"
              match($0, /\+([0-9]+)(,([0-9]+))?/, m)
              start=m[1]; count=m[3]; if(count=="") count=1
              end=start+count-1
              printf("::error file=%s,line=%d,endLine=%d,title=Formatting differs::Run Rider Code Cleanup (Built-in: Reformat Code) and commit.\n", f, start, end)
            }
          ' "$DIFF_FILE"

          # 2) Nice summary table
          {
            echo "### Files/lines needing formatting"
            echo ""
            echo "| File | Lines |"
            echo "|---|---|"
            awk '
              BEGIN{f=""}
              /^\+\+\+ b\//{sub(/^\+\+\+ b\//,""); f=$0; next}
              /^@@ /{
                match($0, /\+([0-9]+)(,([0-9]+))?/, m)
                start=m[1]; count=m[3]; if(count=="") count=1
                end=start+count-1
                printf("| %s | %d-%d |\n", f, start, end)
              }
            ' "$DIFF_FILE"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Fail if formatting changes detected
        if: steps.diff.outputs.has_changes == 'true'
        run: |
          echo "Formatting changes detected. Please run 'jb cleanupcode' locally and commit."
          exit 1
