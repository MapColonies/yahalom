name: Format Check

on:
  workflow_call:

jobs:
  check_formatting:
    name: Check formatting with CSharpier
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Prepare CSharpier (use local tool if present, otherwise install globally)
        id: prep
        shell: bash
        run: |
          if [ -f "./.config/dotnet-tools.json" ] && grep -q '"csharpier"' ./.config/dotnet-tools.json; then
            echo "Using local CSharpier tool (dotnet-tools.json found)"
            dotnet tool restore
            echo "cmd=dotnet csharpier" >> "$GITHUB_OUTPUT"
          else
            echo "Installing CSharpier globally"
            dotnet tool install -g csharpier
            echo "$HOME/.dotnet/tools" >> "$GITHUB_PATH"
            echo "cmd=csharpier" >> "$GITHUB_OUTPUT"
          fi

      - name: Resolve target paths
        id: targets
        shell: bash
        run: |
          if [ -n "${{ inputs.paths }}" ]; then
            printf '%s\n' "${{ inputs.paths }}" | awk 'NF' > paths.txt
          else
            echo "." > paths.txt
          fi
          echo "paths=$(tr '\n' ' ' < paths.txt)" >> "$GITHUB_OUTPUT"

      - name: Run CSharpier check
        shell: bash
        run: |
          CMD="${{ steps.prep.outputs.cmd }}"
          echo "Using: $CMD"
          $CMD --version || true
          # Use MSBuild-style log output so GitHub can surface file messages nicely
          $CMD check ${{ steps.targets.outputs.paths }} --log-format MsBuild
